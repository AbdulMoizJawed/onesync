import { NextRequest, NextResponse } from 'next/server'
import { createClient } from '@supabase/supabase-js'
import { cookies } from 'next/headers'
import { getStripe } from '@/lib/stripe'

export const runtime = 'nodejs'
export const dynamic = 'force-dynamic'

export async function GET(request: NextRequest) {
  try {
    
    const supabase = createRouteHandlerClient({ 
      cookies: async () => await cookies()
    })
    const stripe = getStripe()

    const { data: { user }, error: authError } = await supabase.auth.getUser()
    if (authError || !user) return NextResponse.json({ error: 'Unauthorized' }, { status: 401 })

    const { searchParams } = new URL(request.url)
    const limit = Math.min(Number(searchParams.get('limit') || '20'), 100)

    const { data: accountRec } = await supabase
      .from('stripe_accounts')
      .select('*')
      .eq('user_id', user.id)
      .single()

    if (!accountRec) return NextResponse.json({ error: 'No Stripe account found' }, { status: 404 })

    const payouts = await stripe.payouts.list({ limit }, { stripeAccount: accountRec.stripe_account_id })

    return NextResponse.json({ success: true, payouts })
  } catch (error: any) {
    const message = error?.message || 'Failed to list payouts'
    return NextResponse.json({ error: message }, { status: 500 })
  }
}
