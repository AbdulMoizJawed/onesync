"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/error",{

/***/ "(app-pages-browser)/./lib/supabase/admin.ts":
/*!*******************************!*\
  !*** ./lib/supabase/admin.ts ***!
  \*******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createAdminClient: () => (/* binding */ createAdminClient)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/process/browser.js\");\n\n// Server-side admin (service role) client. NEVER expose the service role key to the browser.\n// This should only run in server contexts: Route Handlers / server actions / scripts.\nconst createAdminClient = ()=>{\n    const url = \"https://bazfqignsrvxwbisfwqw.supabase.co\";\n    const serviceKey = process.env.SUPABASE_SERVICE_ROLE_KEY;\n    if (!url) {\n        throw new Error('Missing NEXT_PUBLIC_SUPABASE_URL for admin client');\n    }\n    if (!serviceKey) {\n        throw new Error('Missing SUPABASE_SERVICE_ROLE_KEY for admin client');\n    }\n    return (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(url, serviceKey, {\n        auth: {\n            autoRefreshToken: false,\n            persistSession: false,\n            detectSessionInUrl: false\n        }\n    });\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9zdXBhYmFzZS9hZG1pbi50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBNEY7QUFFNUYsNkZBQTZGO0FBQzdGLHNGQUFzRjtBQUMvRSxNQUFNRSxvQkFBb0I7SUFDL0IsTUFBTUMsTUFBTUMsMENBQW9DO0lBQ2hELE1BQU1HLGFBQWFILE9BQU9BLENBQUNDLEdBQUcsQ0FBQ0cseUJBQXlCO0lBRXhELElBQUksQ0FBQ0wsS0FBSztRQUNSLE1BQU0sSUFBSU0sTUFBTTtJQUNsQjtJQUNBLElBQUksQ0FBQ0YsWUFBWTtRQUNmLE1BQU0sSUFBSUUsTUFBTTtJQUNsQjtJQUVBLE9BQU9SLG1FQUFvQkEsQ0FBQ0UsS0FBS0ksWUFBWTtRQUMzQ0csTUFBTTtZQUNKQyxrQkFBa0I7WUFDbEJDLGdCQUFnQjtZQUNoQkMsb0JBQW9CO1FBQ3RCO0lBQ0Y7QUFDRixFQUFDIiwic291cmNlcyI6WyIvVXNlcnMvbWFjL0Rlc2t0b3AvcHJvamVjdHMvb25lc3luYy9vbmVzeW5jL2xpYi9zdXBhYmFzZS9hZG1pbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVDbGllbnQgYXMgY3JlYXRlU3VwYWJhc2VDbGllbnQsIFN1cGFiYXNlQ2xpZW50IH0gZnJvbSAnQHN1cGFiYXNlL3N1cGFiYXNlLWpzJ1xuXG4vLyBTZXJ2ZXItc2lkZSBhZG1pbiAoc2VydmljZSByb2xlKSBjbGllbnQuIE5FVkVSIGV4cG9zZSB0aGUgc2VydmljZSByb2xlIGtleSB0byB0aGUgYnJvd3Nlci5cbi8vIFRoaXMgc2hvdWxkIG9ubHkgcnVuIGluIHNlcnZlciBjb250ZXh0czogUm91dGUgSGFuZGxlcnMgLyBzZXJ2ZXIgYWN0aW9ucyAvIHNjcmlwdHMuXG5leHBvcnQgY29uc3QgY3JlYXRlQWRtaW5DbGllbnQgPSAoKTogU3VwYWJhc2VDbGllbnQgPT4ge1xuICBjb25zdCB1cmwgPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVVBBQkFTRV9VUkxcbiAgY29uc3Qgc2VydmljZUtleSA9IHByb2Nlc3MuZW52LlNVUEFCQVNFX1NFUlZJQ0VfUk9MRV9LRVlcblxuICBpZiAoIXVybCkge1xuICAgIHRocm93IG5ldyBFcnJvcignTWlzc2luZyBORVhUX1BVQkxJQ19TVVBBQkFTRV9VUkwgZm9yIGFkbWluIGNsaWVudCcpXG4gIH1cbiAgaWYgKCFzZXJ2aWNlS2V5KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdNaXNzaW5nIFNVUEFCQVNFX1NFUlZJQ0VfUk9MRV9LRVkgZm9yIGFkbWluIGNsaWVudCcpXG4gIH1cblxuICByZXR1cm4gY3JlYXRlU3VwYWJhc2VDbGllbnQodXJsLCBzZXJ2aWNlS2V5LCB7XG4gICAgYXV0aDoge1xuICAgICAgYXV0b1JlZnJlc2hUb2tlbjogZmFsc2UsXG4gICAgICBwZXJzaXN0U2Vzc2lvbjogZmFsc2UsXG4gICAgICBkZXRlY3RTZXNzaW9uSW5Vcmw6IGZhbHNlLFxuICAgIH0sXG4gIH0pXG59XG4iXSwibmFtZXMiOlsiY3JlYXRlQ2xpZW50IiwiY3JlYXRlU3VwYWJhc2VDbGllbnQiLCJjcmVhdGVBZG1pbkNsaWVudCIsInVybCIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19TVVBBQkFTRV9VUkwiLCJzZXJ2aWNlS2V5IiwiU1VQQUJBU0VfU0VSVklDRV9ST0xFX0tFWSIsIkVycm9yIiwiYXV0aCIsImF1dG9SZWZyZXNoVG9rZW4iLCJwZXJzaXN0U2Vzc2lvbiIsImRldGVjdFNlc3Npb25JblVybCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/supabase/admin.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./lib/supabase/index.ts":
/*!*******************************!*\
  !*** ./lib/supabase/index.ts ***!
  \*******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BUCKET_NAME: () => (/* binding */ BUCKET_NAME),\n/* harmony export */   createAdminClient: () => (/* reexport safe */ _admin__WEBPACK_IMPORTED_MODULE_1__.createAdminClient),\n/* harmony export */   hasValidSupabaseConfig: () => (/* binding */ hasValidSupabaseConfig),\n/* harmony export */   supabase: () => (/* binding */ supabase)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n/* harmony import */ var _admin__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./admin */ \"(app-pages-browser)/./lib/supabase/admin.ts\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/process/browser.js\");\n// Bridge file so imports of '@/lib/supabase' (from both root and admin code) work.\n// If admin code expects BUCKET_NAME and a browser supabase client, replicate minimal API.\n\n// Bucket name may be optional in some flows; only warn if absent.\nconst BUCKET_NAME = process.env.NEXT_PUBLIC_BUCKET_NAME || '';\n// Custom storage implementation to ensure persistence\nconst customStorage = {\n    getItem: (key)=>{\n        if (false) {}\n        try {\n            return window.localStorage.getItem(key);\n        } catch (error) {\n            console.error('Error reading from localStorage:', error);\n            return null;\n        }\n    },\n    setItem: (key, value)=>{\n        if (false) {}\n        try {\n            window.localStorage.setItem(key, value);\n            console.log(\"✅ Session saved to localStorage: \".concat(key));\n        } catch (error) {\n            console.error('Error writing to localStorage:', error);\n        }\n    },\n    removeItem: (key)=>{\n        if (false) {}\n        try {\n            window.localStorage.removeItem(key);\n            console.log(\"\\uD83D\\uDDD1️ Session removed from localStorage: \".concat(key));\n        } catch (error) {\n            console.error('Error removing from localStorage:', error);\n        }\n    }\n};\n// Create supabase client safely with fallback\nlet supabaseClient = null;\ntry {\n    const supabaseUrl = \"https://bazfqignsrvxwbisfwqw.supabase.co\";\n    const supabaseKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImJhemZxaWduc3J2eHdiaXNmd3F3Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTQwMzQyNDQsImV4cCI6MjA2OTYxMDI0NH0.laHA1KPjJj8G7rFUq4lut7WD-Kbe19yrVsS0s7oogrA\";\n    if (!supabaseUrl || !supabaseKey) {\n        if (true) {\n            console.warn('⚠️ Supabase environment variables not configured');\n        }\n        supabaseClient = null;\n    } else {\n        supabaseClient = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(supabaseUrl, supabaseKey, {\n            auth: {\n                persistSession: true,\n                autoRefreshToken: true,\n                detectSessionInUrl: true,\n                flowType: 'pkce',\n                // debug: process.env.NODE_ENV === 'development', // Enable debug logs in dev\n                debug: false,\n                storage: customStorage,\n                storageKey: 'sb-auth-token'\n            },\n            global: {\n                headers: {\n                    'X-Client-Info': 'onesync-web-app'\n                }\n            },\n            // Retry failed requests to prevent session loss from network issues\n            realtime: {\n                params: {\n                    eventsPerSecond: 10\n                }\n            }\n        });\n        if (true) {\n            console.log('✅ Supabase client created successfully');\n        }\n    }\n} catch (error) {\n    if (true) {\n        console.error('Failed to create Supabase client:', error);\n    }\n    supabaseClient = null;\n}\nconst supabase = supabaseClient;\n// Helper to check if Supabase is configured\nfunction hasValidSupabaseConfig() {\n    return !!( true && \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImJhemZxaWduc3J2eHdiaXNmd3F3Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTQwMzQyNDQsImV4cCI6MjA2OTYxMDI0NH0.laHA1KPjJj8G7rFUq4lut7WD-Kbe19yrVsS0s7oogrA\");\n}\n// Re-export admin helper for server contexts\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9zdXBhYmFzZS9pbmRleC50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUEsbUZBQW1GO0FBQ25GLDBGQUEwRjtBQUN0QztBQUdwRCxrRUFBa0U7QUFDM0QsTUFBTUMsY0FBY0MsT0FBT0EsQ0FBQ0MsR0FBRyxDQUFDQyx1QkFBdUIsSUFBSSxHQUFFO0FBRXBFLHNEQUFzRDtBQUN0RCxNQUFNQyxnQkFBZ0I7SUFDcEJDLFNBQVMsQ0FBQ0M7UUFDUixJQUFJLEtBQTZCLEVBQUUsRUFBTztRQUMxQyxJQUFJO1lBQ0YsT0FBT0MsT0FBT0MsWUFBWSxDQUFDSCxPQUFPLENBQUNDO1FBQ3JDLEVBQUUsT0FBT0csT0FBTztZQUNkQyxRQUFRRCxLQUFLLENBQUMsb0NBQW9DQTtZQUNsRCxPQUFPO1FBQ1Q7SUFDRjtJQUNBRSxTQUFTLENBQUNMLEtBQWFNO1FBQ3JCLElBQUksS0FBNkIsRUFBRTtRQUNuQyxJQUFJO1lBQ0ZMLE9BQU9DLFlBQVksQ0FBQ0csT0FBTyxDQUFDTCxLQUFLTTtZQUNqQ0YsUUFBUUcsR0FBRyxDQUFDLG9DQUF3QyxPQUFKUDtRQUNsRCxFQUFFLE9BQU9HLE9BQU87WUFDZEMsUUFBUUQsS0FBSyxDQUFDLGtDQUFrQ0E7UUFDbEQ7SUFDRjtJQUNBSyxZQUFZLENBQUNSO1FBQ1gsSUFBSSxLQUE2QixFQUFFO1FBQ25DLElBQUk7WUFDRkMsT0FBT0MsWUFBWSxDQUFDTSxVQUFVLENBQUNSO1lBQy9CSSxRQUFRRyxHQUFHLENBQUMsb0RBQThDLE9BQUpQO1FBQ3hELEVBQUUsT0FBT0csT0FBTztZQUNkQyxRQUFRRCxLQUFLLENBQUMscUNBQXFDQTtRQUNyRDtJQUNGO0FBQ0Y7QUFFQSw4Q0FBOEM7QUFDOUMsSUFBSU0saUJBQXdDO0FBRTVDLElBQUk7SUFDRixNQUFNQyxjQUFjZiwwQ0FBb0M7SUFDeEQsTUFBTWlCLGNBQWNqQixrTkFBeUM7SUFFN0QsSUFBSSxDQUFDZSxlQUFlLENBQUNFLGFBQWE7UUFDaEMsSUFBSSxJQUE2QixFQUFFO1lBQ2pDUixRQUFRVSxJQUFJLENBQUM7UUFDZjtRQUNBTCxpQkFBaUI7SUFDbkIsT0FBTztRQUNMQSxpQkFBaUJoQixtRUFBWUEsQ0FBQ2lCLGFBQWFFLGFBQWE7WUFDdERHLE1BQU07Z0JBQ0pDLGdCQUFnQjtnQkFDaEJDLGtCQUFrQjtnQkFDbEJDLG9CQUFvQjtnQkFDcEJDLFVBQVU7Z0JBQ1YsNkVBQTZFO2dCQUM3RUMsT0FBTztnQkFDUEMsU0FBU3ZCO2dCQUNUd0IsWUFBWTtZQUtkO1lBQ0FDLFFBQVE7Z0JBQ05DLFNBQVM7b0JBQ1AsaUJBQWlCO2dCQUNuQjtZQUNGO1lBQ0Esb0VBQW9FO1lBQ3BFQyxVQUFVO2dCQUNSQyxRQUFRO29CQUNOQyxpQkFBaUI7Z0JBQ25CO1lBQ0Y7UUFDRjtRQUVBLElBQUksSUFBNkIsRUFBRTtZQUNqQ3ZCLFFBQVFHLEdBQUcsQ0FBQztRQUNkO0lBQ0Y7QUFDRixFQUFFLE9BQU9KLE9BQU87SUFDZCxJQUFJLElBQTZCLEVBQUU7UUFDakNDLFFBQVFELEtBQUssQ0FBQyxxQ0FBcUNBO0lBQ3JEO0lBQ0FNLGlCQUFpQjtBQUNuQjtBQUVPLE1BQU1tQixXQUFXbkIsZUFBYztBQUV0Qyw0Q0FBNEM7QUFDckMsU0FBU29CO0lBQ2QsT0FBTyxDQUFDLENBQUVsQyxDQUFBQSxLQUFvQyxJQUFJQSxrTkFBeUM7QUFDN0Y7QUFFQSw2Q0FBNkM7QUFDRiIsInNvdXJjZXMiOlsiL1VzZXJzL21hYy9EZXNrdG9wL3Byb2plY3RzL29uZXN5bmMvb25lc3luYy9saWIvc3VwYWJhc2UvaW5kZXgudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQnJpZGdlIGZpbGUgc28gaW1wb3J0cyBvZiAnQC9saWIvc3VwYWJhc2UnIChmcm9tIGJvdGggcm9vdCBhbmQgYWRtaW4gY29kZSkgd29yay5cbi8vIElmIGFkbWluIGNvZGUgZXhwZWN0cyBCVUNLRVRfTkFNRSBhbmQgYSBicm93c2VyIHN1cGFiYXNlIGNsaWVudCwgcmVwbGljYXRlIG1pbmltYWwgQVBJLlxuaW1wb3J0IHsgY3JlYXRlQ2xpZW50IH0gZnJvbSAnQHN1cGFiYXNlL3N1cGFiYXNlLWpzJ1xuaW1wb3J0IHR5cGUgeyBTdXBhYmFzZUNsaWVudCB9IGZyb20gJ0BzdXBhYmFzZS9zdXBhYmFzZS1qcydcblxuLy8gQnVja2V0IG5hbWUgbWF5IGJlIG9wdGlvbmFsIGluIHNvbWUgZmxvd3M7IG9ubHkgd2FybiBpZiBhYnNlbnQuXG5leHBvcnQgY29uc3QgQlVDS0VUX05BTUUgPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19CVUNLRVRfTkFNRSB8fCAnJ1xuXG4vLyBDdXN0b20gc3RvcmFnZSBpbXBsZW1lbnRhdGlvbiB0byBlbnN1cmUgcGVyc2lzdGVuY2VcbmNvbnN0IGN1c3RvbVN0b3JhZ2UgPSB7XG4gIGdldEl0ZW06IChrZXk6IHN0cmluZykgPT4ge1xuICAgIGlmICh0eXBlb2Ygd2luZG93ID09PSAndW5kZWZpbmVkJykgcmV0dXJuIG51bGxcbiAgICB0cnkge1xuICAgICAgcmV0dXJuIHdpbmRvdy5sb2NhbFN0b3JhZ2UuZ2V0SXRlbShrZXkpXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIHJlYWRpbmcgZnJvbSBsb2NhbFN0b3JhZ2U6JywgZXJyb3IpXG4gICAgICByZXR1cm4gbnVsbFxuICAgIH1cbiAgfSxcbiAgc2V0SXRlbTogKGtleTogc3RyaW5nLCB2YWx1ZTogc3RyaW5nKSA9PiB7XG4gICAgaWYgKHR5cGVvZiB3aW5kb3cgPT09ICd1bmRlZmluZWQnKSByZXR1cm5cbiAgICB0cnkge1xuICAgICAgd2luZG93LmxvY2FsU3RvcmFnZS5zZXRJdGVtKGtleSwgdmFsdWUpXG4gICAgICBjb25zb2xlLmxvZyhg4pyFIFNlc3Npb24gc2F2ZWQgdG8gbG9jYWxTdG9yYWdlOiAke2tleX1gKVxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdFcnJvciB3cml0aW5nIHRvIGxvY2FsU3RvcmFnZTonLCBlcnJvcilcbiAgICB9XG4gIH0sXG4gIHJlbW92ZUl0ZW06IChrZXk6IHN0cmluZykgPT4ge1xuICAgIGlmICh0eXBlb2Ygd2luZG93ID09PSAndW5kZWZpbmVkJykgcmV0dXJuXG4gICAgdHJ5IHtcbiAgICAgIHdpbmRvdy5sb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbShrZXkpXG4gICAgICBjb25zb2xlLmxvZyhg8J+Xke+4jyBTZXNzaW9uIHJlbW92ZWQgZnJvbSBsb2NhbFN0b3JhZ2U6ICR7a2V5fWApXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIHJlbW92aW5nIGZyb20gbG9jYWxTdG9yYWdlOicsIGVycm9yKVxuICAgIH1cbiAgfSxcbn1cblxuLy8gQ3JlYXRlIHN1cGFiYXNlIGNsaWVudCBzYWZlbHkgd2l0aCBmYWxsYmFja1xubGV0IHN1cGFiYXNlQ2xpZW50OiBTdXBhYmFzZUNsaWVudCB8IG51bGwgPSBudWxsXG5cbnRyeSB7XG4gIGNvbnN0IHN1cGFiYXNlVXJsID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMXG4gIGNvbnN0IHN1cGFiYXNlS2V5ID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1VQQUJBU0VfQU5PTl9LRVlcblxuICBpZiAoIXN1cGFiYXNlVXJsIHx8ICFzdXBhYmFzZUtleSkge1xuICAgIGlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgY29uc29sZS53YXJuKCfimqDvuI8gU3VwYWJhc2UgZW52aXJvbm1lbnQgdmFyaWFibGVzIG5vdCBjb25maWd1cmVkJylcbiAgICB9XG4gICAgc3VwYWJhc2VDbGllbnQgPSBudWxsXG4gIH0gZWxzZSB7XG4gICAgc3VwYWJhc2VDbGllbnQgPSBjcmVhdGVDbGllbnQoc3VwYWJhc2VVcmwsIHN1cGFiYXNlS2V5LCB7XG4gICAgICBhdXRoOiB7XG4gICAgICAgIHBlcnNpc3RTZXNzaW9uOiB0cnVlLCAgICAgICAvLyBQZXJzaXN0IHNlc3Npb24gaW4gbG9jYWxTdG9yYWdlXG4gICAgICAgIGF1dG9SZWZyZXNoVG9rZW46IHRydWUsICAgICAgLy8gQXV0by1yZWZyZXNoIHRva2VuIGJlZm9yZSBleHBpcnlcbiAgICAgICAgZGV0ZWN0U2Vzc2lvbkluVXJsOiB0cnVlLCAgICAvLyBEZXRlY3QgT0F1dGggc2Vzc2lvbnMgZnJvbSBVUkxcbiAgICAgICAgZmxvd1R5cGU6ICdwa2NlJywgICAgICAgICAgIC8vIEJhY2sgdG8gUEtDRSBmb3IgYmV0dGVyIHNlY3VyaXR5XG4gICAgICAgIC8vIGRlYnVnOiBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ2RldmVsb3BtZW50JywgLy8gRW5hYmxlIGRlYnVnIGxvZ3MgaW4gZGV2XG4gICAgICAgIGRlYnVnOiBmYWxzZSxcbiAgICAgICAgc3RvcmFnZTogY3VzdG9tU3RvcmFnZSwgICAgICAvLyBVc2UgY3VzdG9tIHN0b3JhZ2Ugd2l0aCBsb2dnaW5nXG4gICAgICAgIHN0b3JhZ2VLZXk6ICdzYi1hdXRoLXRva2VuJywgLy8gVXNlIGNvbnNpc3RlbnQgc3RvcmFnZSBrZXlcbiAgICAgICAgLy8gTm90ZTogSldUIGV4cGlyeSBpcyBzZXQgc2VydmVyLXNpZGUgaW4gU3VwYWJhc2UgRGFzaGJvYXJkXG4gICAgICAgIC8vIERlZmF1bHQgaXMgMzYwMCBzZWNvbmRzICgxIGhvdXIpLCB3ZSB3YW50IDEyMDAgc2Vjb25kcyAoMjAgbWludXRlcylcbiAgICAgICAgLy8gVGhpcyBuZWVkcyB0byBiZSBjb25maWd1cmVkIGluIFN1cGFiYXNlIERhc2hib2FyZCDihpIgQXV0aGVudGljYXRpb24g4oaSIFNldHRpbmdzXG4gICAgICAgIC8vIFVuZGVyIFwiSldUIEV4cGlyeVwiIHNldCB0byAxMjAwIHNlY29uZHNcbiAgICAgIH0sXG4gICAgICBnbG9iYWw6IHtcbiAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICdYLUNsaWVudC1JbmZvJzogJ29uZXN5bmMtd2ViLWFwcCcsXG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgICAgLy8gUmV0cnkgZmFpbGVkIHJlcXVlc3RzIHRvIHByZXZlbnQgc2Vzc2lvbiBsb3NzIGZyb20gbmV0d29yayBpc3N1ZXNcbiAgICAgIHJlYWx0aW1lOiB7XG4gICAgICAgIHBhcmFtczoge1xuICAgICAgICAgIGV2ZW50c1BlclNlY29uZDogMTAsXG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgIH0pXG4gICAgXG4gICAgaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICBjb25zb2xlLmxvZygn4pyFIFN1cGFiYXNlIGNsaWVudCBjcmVhdGVkIHN1Y2Nlc3NmdWxseScpXG4gICAgfVxuICB9XG59IGNhdGNoIChlcnJvcikge1xuICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICBjb25zb2xlLmVycm9yKCdGYWlsZWQgdG8gY3JlYXRlIFN1cGFiYXNlIGNsaWVudDonLCBlcnJvcilcbiAgfVxuICBzdXBhYmFzZUNsaWVudCA9IG51bGxcbn1cblxuZXhwb3J0IGNvbnN0IHN1cGFiYXNlID0gc3VwYWJhc2VDbGllbnRcblxuLy8gSGVscGVyIHRvIGNoZWNrIGlmIFN1cGFiYXNlIGlzIGNvbmZpZ3VyZWRcbmV4cG9ydCBmdW5jdGlvbiBoYXNWYWxpZFN1cGFiYXNlQ29uZmlnKCk6IGJvb2xlYW4ge1xuICByZXR1cm4gISEocHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMICYmIHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NVUEFCQVNFX0FOT05fS0VZKVxufVxuXG4vLyBSZS1leHBvcnQgYWRtaW4gaGVscGVyIGZvciBzZXJ2ZXIgY29udGV4dHNcbmV4cG9ydCB7IGNyZWF0ZUFkbWluQ2xpZW50IH0gZnJvbSAnLi9hZG1pbidcbiJdLCJuYW1lcyI6WyJjcmVhdGVDbGllbnQiLCJCVUNLRVRfTkFNRSIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19CVUNLRVRfTkFNRSIsImN1c3RvbVN0b3JhZ2UiLCJnZXRJdGVtIiwia2V5Iiwid2luZG93IiwibG9jYWxTdG9yYWdlIiwiZXJyb3IiLCJjb25zb2xlIiwic2V0SXRlbSIsInZhbHVlIiwibG9nIiwicmVtb3ZlSXRlbSIsInN1cGFiYXNlQ2xpZW50Iiwic3VwYWJhc2VVcmwiLCJORVhUX1BVQkxJQ19TVVBBQkFTRV9VUkwiLCJzdXBhYmFzZUtleSIsIk5FWFRfUFVCTElDX1NVUEFCQVNFX0FOT05fS0VZIiwid2FybiIsImF1dGgiLCJwZXJzaXN0U2Vzc2lvbiIsImF1dG9SZWZyZXNoVG9rZW4iLCJkZXRlY3RTZXNzaW9uSW5VcmwiLCJmbG93VHlwZSIsImRlYnVnIiwic3RvcmFnZSIsInN0b3JhZ2VLZXkiLCJnbG9iYWwiLCJoZWFkZXJzIiwicmVhbHRpbWUiLCJwYXJhbXMiLCJldmVudHNQZXJTZWNvbmQiLCJzdXBhYmFzZSIsImhhc1ZhbGlkU3VwYWJhc2VDb25maWciLCJjcmVhdGVBZG1pbkNsaWVudCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/supabase/index.ts\n"));

/***/ })

});